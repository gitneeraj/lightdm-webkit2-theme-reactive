# This workflow will do a clean install of node dependencies, build the source code and create tagged release

name: Build and Release CI

on:
  push:
    tags:
      - 'v*'

jobs:
  release-project:
    name: Release Static site to Github Releases
    runs-on: ubuntu-latest
    needs: build-project
    steps:
      - name: Download site content
        uses: actions/download-artifact@v2
        with:
          name: reactive
      - name: Archive site content
        uses: thedoctor0/zip-release@master
        with:
          filename: reactive.tar.gz
          type: tar
      - name: Create Github Release
        id: create-new-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-new-release.outputs.upload_url }}
          asset_path: ./reactive.tar.gz
          asset_name: lightdm-webkit2-theme-reactive-${{ steps.get_version.outputs.VERSION }}.tar.gz
          asset_content_type: application/tar+gzip

  build-project:
    name: Build Project
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [15.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm i
      - run: npm run build:lightdm

      - name: Upload static site
        uses: actions/upload-artifact@v2
        with:
          name: reactive
          path: reactive/
